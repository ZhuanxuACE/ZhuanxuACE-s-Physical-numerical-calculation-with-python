import numpy as np
import matplotlib as mpl
from matplotlib import pyplot as plt
from matplotlib.animation import FuncAnimation, PillowWriter 

#为了使图片美观，将数字放缩的函数
#Functions to deflate numbers for aesthetically pleasing images
def scale(x):
    x = x*10
    return np.where(x>0,np.power(x,0.5),-np.power(-x,0.5))

fig = plt.figure(dpi = 200)
ax = fig.subplots()
a = 4
t = np.linspace(-16,16,33)
t2 = np.linspace(-16,16,32) 
x,y=np.meshgrid(t,t2)

xx = 1*(x-a)/(((x-a)*(x-a)+y*y)**(1.5))-(x+a)/(((x+a)*(x+a)+y*y)**(1.5))
yy = 1*y/(((x-a)*(x-a)+y*y)**(1.5))-y/(((x+a)*(x+a)+y*y)**(1.5))

r = np.power(np.add(np.power(xx,2), np.power(yy,2)),0.5)
line1 = ax.quiver(x,y,xx,yy,angles='xy', scale_units = 'xy', scale=1,pivot='middle')
line2 = ax.scatter([-4,4],[0,0],color = 'r')
line3 = ax.scatter([-4,4],[0,0])
ax.set_aspect(0.5)

def updata(frame):
    a = 8*np.sin(np.pi*(frame+1)/150)
    xx = 8*((x-a)/(((x-a)*(x-a)+y*y)**(1.5))-(x+a)/(((x+a)*(x+a)+y*y)**(1.5)))
    yy = 8*(y/(((x-a)*(x-a)+y*y)**(1.5))-y/(((x+a)*(x+a)+y*y)**(1.5)))
    r = np.power(np.add(np.power(xx,2), np.power(yy,2)),0.5)
    for i in range(32):
        for j in range(33):
            if xx[i][j]**2+yy[i][j]**2>0.0081:
                xx[i][j]=0.09*xx[i][j]/r[i][j]
                yy[i][j]=0.09*yy[i][j]/r[i][j]
    xx = scale(xx)
    yy = scale(yy)
    line1.set_UVC(xx,yy)
    line2.set_offsets([a,0])
    line3.set_offsets([-a,0])
    return line1 and line2 and line3

ani = FuncAnimation(fig,func=updata,frames=300,interval = 50)

#打开下面用于保存gif图 Open the following for saving gifs
#ani.save("电场图.gif",writer = 'pillow')

plt.show()
