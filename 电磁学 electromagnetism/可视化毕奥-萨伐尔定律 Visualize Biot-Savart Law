import numpy as np
from matplotlib import pyplot as plt
from matplotlib.animation import FuncAnimation
'''
数值计算毕奥-萨伐尔定律的积分形式：B = ∫dl×e_r/(r^2)
Numerical computation of the integral form of the Biot-Savart Law：B = ∫dl×e_r/(r^2)
'''
I = 0.2#电流大小 magnitude of electric current 

zero = np.zeros(3)

#生成3D网格 Generating 3D meshes
n_x = 9
x_min = -1.5
x_max = 1.5
x = np.linspace(x_min,x_max,n_x)
y = np.linspace(x_min,x_max,n_x)
z = np.linspace(x_min,x_max,n_x)
X,Y,Z = np.meshgrid(x,y,z)

#利用参数方程建立导线方程，t为参数
#Using the parametric equation to establish the equation of the wire, t is the parameter
n_t = 250
t_min = -np.pi
t_max = np.pi
t = np.linspace(t_min,t_max,n_t)

l_x = np.cos(t)
l_y = np.sin(t)
l_z = np.zeros(n_t)

l = np.hstack((l_x.reshape((n_t,1)),l_y.reshape((n_t,1)),l_z.reshape((n_t,1))))
dl = np.diff(l,axis = 0)

B_vector = np.zeros((n_x**3,3))
count = 0

#开始计算毕奥-萨伐尔定律B
#Start calculating the Biot-Savart Law B
for i in range(n_x):
    for j in range(n_x):
        for k in range(n_x):
            temp = np.zeros(3)
            for m in range(n_t-1): 
                X_l = X[i,j,k]-l_x[m]
                Y_l = Y[i,j,k]-l_y[m]
                Z_l = Z[i,j,k]-l_z[m]
                r = X_l**2 + Y_l**2 + Z_l**2
                e_r = np.array([X_l,Y_l,Z_l])/np.linalg.norm(np.array([X_l,Y_l,Z_l]))
                temp = temp + np.cross(dl[m],e_r)/r
            B_vector[count] = I * temp
            count = count+1

#将各个场点磁场大小分量分离
#Separating the magnetic field magnitude components at each field point
B_x = np.reshape(B_vector[:,0],(n_x,n_x,n_x))
B_y = np.reshape(B_vector[:,1],(n_x,n_x,n_x))
B_z = np.reshape(B_vector[:,2],(n_x,n_x,n_x))

fig = plt.figure()
ax = fig.add_subplot(projection = "3d")

ax.quiver(X,Y,Z,B_x,B_y,B_z,arrow_length_ratio=0.1, length=1,pivot='middle', normalize=False)
ax.plot(l_x,l_y,l_z,color = 'r')

ax.set_xlim([x_min,x_max])
ax.set_ylim([x_min,x_max])
ax.set_zlim([x_min,x_max])

ax.set_title("Red line: wire, Blue vector: magnetic fields")

plt.show()
